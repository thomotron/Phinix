// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Stores/ProtoThings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Trading {

  /// <summary>Holder for reflection information generated from Stores/ProtoThings.proto</summary>
  public static partial class ProtoThingsReflection {

    #region Descriptor
    /// <summary>File descriptor for Stores/ProtoThings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoThingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTdG9yZXMvUHJvdG9UaGluZ3MucHJvdG8SB1RyYWRpbmcaE1BhY2tldHMv",
            "VGhpbmcucHJvdG8iMgoLUHJvdG9UaGluZ3MSIwoGdGhpbmdzGAEgAygLMhMu",
            "VHJhZGluZy5Qcm90b1RoaW5nYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Trading.ThingReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Trading.ProtoThings), global::Trading.ProtoThings.Parser, new[]{ "Things" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// This is a workaround for Protobuf to support maps with repeated values (as used in TradeStore.proto)
  /// </summary>
  public sealed partial class ProtoThings : pb::IMessage<ProtoThings> {
    private static readonly pb::MessageParser<ProtoThings> _parser = new pb::MessageParser<ProtoThings>(() => new ProtoThings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoThings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trading.ProtoThingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoThings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoThings(ProtoThings other) : this() {
      things_ = other.things_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoThings Clone() {
      return new ProtoThings(this);
    }

    /// <summary>Field number for the "things" field.</summary>
    public const int ThingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Trading.ProtoThing> _repeated_things_codec
        = pb::FieldCodec.ForMessage(10, global::Trading.ProtoThing.Parser);
    private readonly pbc::RepeatedField<global::Trading.ProtoThing> things_ = new pbc::RepeatedField<global::Trading.ProtoThing>();
    /// <summary>
    /// Collection of things
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Trading.ProtoThing> Things {
      get { return things_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoThings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoThings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!things_.Equals(other.things_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= things_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      things_.WriteTo(output, _repeated_things_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += things_.CalculateSize(_repeated_things_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoThings other) {
      if (other == null) {
        return;
      }
      things_.Add(other.things_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            things_.AddEntriesFrom(input, _repeated_things_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
